<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.apiserver.model.system.mapper.MobileVerificationMapper" >
  <resultMap id="BaseResultMap" type="com.apiserver.model.system.entity.MobileVerification" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="verification" property="verification" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, mobile, verification, create_time, type, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from s_mobile_verification
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from s_mobile_verification
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.apiserver.model.system.entity.MobileVerification" >
    insert into s_mobile_verification (id, mobile, verification, 
      create_time, type, status
      )
    values (#{id,jdbcType=BIGINT}, #{mobile,jdbcType=VARCHAR}, #{verification,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.apiserver.model.system.entity.MobileVerification" >
    insert into s_mobile_verification
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="verification != null" >
        verification,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="verification != null" >
        #{verification,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.apiserver.model.system.entity.MobileVerification" >
    update s_mobile_verification
    <set >
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="verification != null" >
        verification = #{verification,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.apiserver.model.system.entity.MobileVerification" >
    update s_mobile_verification
    set mobile = #{mobile,jdbcType=VARCHAR},
      verification = #{verification,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>